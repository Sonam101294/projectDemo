# Unique name for this workflow
name: stagingBuild

# Definition when the workflow should run
on:
    pull_request:
        branches:

            - staging
        paths-ignore:
            - 'sfdx-project.json'
            - 'README.md'

# Jobs to be executed
jobs:
    build:
    
        environment : staging
        env:
            Key1: ${{secrets.DEVHUB_SFDX_URL}}
        runs-on: ubuntu-latest
        steps:
            # Install Salesforce CLI1
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version
            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            # Store secret for dev hub
            - name: 'Populate auth file with DEVHUB_SFDX_URL secret'
              shell: bash
              run: |
                  echo ${{env.Key1}} > ./DEVHUB_SFDX_URL.txt
                  secretFileSize=$(wc -c "./DEVHUB_SFDX_URL.txt" | awk '{print $1}')
                  if [ $secretFileSize == 1 ]; then
                      echo "Missing DEVHUB_SFDX_URL secret. Is this workflow running on a fork?";
                      exit 1;
                  fi
            # Authenticate dev hub
            - name: 'Authenticate Dev Hub'
              run: sfdx auth:sfdxurl:store -f ./DEVHUB_SFDX_URL.txt -a devhub -d

            
            - name: 'Install app and create delta'
              run: |
               echo y | sfdx plugins:install sfdx-git-delta
               git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'
               git fetch --all
               git checkout -b pr
               git --no-pager diff --name-status pr origin/staging
               sfdx sgd:source:delta --to pr --from origin/staging --output "."
               echo "--- package.xml generated with added and modified metadata ---"
               cat package/package.xml
               echo
               echo "---- Deploying added and modified metadata ----"
              
              
        
            - name: 'Convert Metadata'
              run: sfdx force:source:convert --manifest=package/package.xml --outputdir=convert
            - name: 'Run Test on Metadata'
              run: sfdx force:mdapi:deploy --deploydir=convert --testlevel=RunLocalTests --checkonly -u devhub -w30
